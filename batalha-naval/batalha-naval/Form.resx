<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="barco.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAN0AAABGCAIAAADHBwbNAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAARWSURBVHhe7ZnrceMwDIRTlwtyPanGzaSYnB4WCYBYkpDt
        DOa03z8SIB6rTSY39/VLSD7oS5IR+pJkhL4kGaEvSUboS5IR+pJkhL4kGaEvSUboS5IR+pJkhL4kGaEv
        SUboS5IR+pJkhL4kGaEvSUboS5IR+pJkhL4kGaEvSUboS5IR+pJkhL4kGaEvL8jj/lW4P56XuZj25c/3
        7bmJw+3755l2Wbr6JPv6l/HlRtIN/4ixPnl+eK/ly2s7c0afLM78X30p9ZU7XtmYSB8lUBJjXsGXKuAu
        2f4mAVoIufYO6mVHQPWzsTD4/MH0OaA+Q4Em9WnK6HdYHpW3pQ18OaNPKbq8P/LtR3tF18/6Ukmi6eux
        dLDqLExoWHFVwQM5tUNAfTqRkD4y9/7w9vY2dlWUl7rPtD4l8XYTL273u35/WtXXfSmWnFd9pZlZVpLb
        VmINmg7exxScFnEF6qMiqkVMn9GyC40xBwuvyC4BfSamWWkmmuWdf1/2XPPcCVXZ0LIcYVVGvvEDqgi2
        wbB6FLQZbqAiY31Uel3Nq/JEvzhixnz1iUof6VPvt0tzrE30RPOc8qVLM4HrWFnGvpCKuRLAa1VJlhEB
        cI3KRxnqs6AXDuqjGogQfAEXk0rUJzF96u2eW167xzgf9KWDLmJfIGXce1kq2lrnRyv5DPWZ8XxPHxmT
        tdC9lM309gTFKriRerlfGSOW48zWHu/z5YpeaENqYLDZWEgHT9senfxQX8RYH3/KaX2QceS9HB/dL3il
        gvrUEntyyTHHs4K+/u8eGehEHMz67v6QUPJCJz9aygXoI2o3C8f0kdkyAhrD/AUvFNSnltgLlBxzPCvo
        675EIXl7cPt+OJIcdKRpEclNIY9OfqgvAuqDqkf1kfkyghrDgfxSQX1qiT255Jij6TzNO3w5GFzle5Ic
        eGUgvUIeeP5oJR9YH5QH+XgYFIGNhZymlBeBZfzG9XK/KiXNUZea52O/L4HJsFjwCcCVawW0QJ07i0XA
        ZURjf5w5fdC+sDEMyB61VEyfervnltfmqKWY52N/X3r5KrWdWSgzs47f2Bd9ReUfETB9HG/fHX8tL18N
        Y8vI4Ng3K7rc8UYJJEup9JE+9X7PLFXNUU80zylfQuQUZn9E1QV8wA6DFk2RQb4YJY7URzcWkVf0kQ3k
        pLjxVA9ZKqBP7brflqfmOPchW97pSzn3irvmMqi6F4/E/ew6nansNBs4300PgO0hI6pLTB9UBjdecXq8
        9//Hn4FS0hxnP6TlTb5E7fWrultVRuwr5Aqt04xmNLTIz7JyVjuFHMIUVP30bAF9ZKos0mm8o3psL+VA
        ep6NGX1q0b1AeWOOZ7Wd9iUhfwh9STJCX5KM0JckI/QlyQh9STJCX5KM0JckI/QlyQh9STJCX5KM0Jck
        I/QlyQh9STJCX5KM0JckI/QlyQh9STJCX5KM0JckI/QlyQh9STJCX5KM0JckI/QlyQh9SfLx+/sPlVWy
        geTBAgwAAAAASUVORK5CYII=
</value>
  </data>
</root>